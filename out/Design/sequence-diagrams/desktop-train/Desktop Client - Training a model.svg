<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2903px" preserveAspectRatio="none" style="width:2377px;height:2903px;" version="1.1" viewBox="0 0 2377 2903" width="2377px" zoomAndPan="magnify"><defs><filter height="300%" id="fsaulp7y2teo3" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#DDDDDD" height="2891.875" style="stroke:#A80036;stroke-width:1.0;" width="125" x="2230" y="6"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="118" x="2233.5" y="18.0669">External Service</text><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="100.2656" style="stroke:#A80036;stroke-width:1.0;" width="10" x="339" y="252.125"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="145.6641" style="stroke:#A80036;stroke-width:1.0;" width="10" x="339" y="381.5234"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="2237.2578" style="stroke:#A80036;stroke-width:1.0;" width="10" x="339" y="556.3203"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="35.2969" style="stroke:#A80036;stroke-width:1.0;" width="10" x="664" y="187.6953"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="57.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="664" y="281.2578"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="87.3984" style="stroke:#A80036;stroke-width:1.0;" width="10" x="664" y="410.6563"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="2194.125" style="stroke:#A80036;stroke-width:1.0;" width="10" x="664" y="585.4531"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="20.1641" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1180" y="639.7188"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="2076.5625" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1180" y="689.0156"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="40.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="1072.4141"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="274.2266" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="1285.2109"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="40.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="1756.2344"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="259.0938" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="1991.0313"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="2604.8828"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="103.5625" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1503" y="1319.3438"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="103.5625" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1503" y="2025.1641"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="103.5625" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1503" y="2370.7891"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="35.2969" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1717" y="1358.4766"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1717" y="1452.0391"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1717" y="1495.1719"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="35.2969" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1811" y="2064.2969"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1811" y="2157.8594"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1811" y="2200.9922"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="35.2969" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1909" y="2409.9219"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1909" y="2503.4844"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1909" y="2546.6172"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="20.1641" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1999.5" y="2688.2813"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="119.4297"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="310.3906"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="439.7891"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="776.4141"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="917.0781"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="975.0156"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="1148.6797"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="1595.5703"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="1832.5"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="2737.5781"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2287.5" y="718.1484"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2287.5" y="858.8125"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="191.6016" style="stroke:#000000;stroke-width:2.0;" width="1219" x="1142" y="820.5469"/><rect fill="#FFFFFF" height="73.0703" style="stroke:none;stroke-width:1.0;" width="1219" x="1142" y="939.0781"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="144.5313" style="stroke:#000000;stroke-width:2.0;" width="1092" x="1142" y="1026.1484"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="378.625" style="stroke:#000000;stroke-width:2.0;" width="1092" x="1142" y="1238.9453"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="229.9297" style="stroke:#000000;stroke-width:2.0;" width="1336" x="908" y="1685.8359"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="144.5313" style="stroke:#000000;stroke-width:2.0;" width="1092" x="1142" y="1709.9688"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="24" x2="24" y1="88.2969" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="343.5" x2="343.5" y1="88.2969" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="668.5" x2="668.5" y1="189.2109" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="1185" x2="1185" y1="626.1016" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="1508" x2="1508" y1="88.2969" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="1722" x2="1722" y1="1359.9922" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="1816" x2="1816" y1="2065.8125" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="1914" x2="1914" y1="2411.4375" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="2004" x2="2004" y1="2674.6641" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="2188" x2="2188" y1="88.2969" y2="2811.5781"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="2292" x2="2292" y1="88.2969" y2="2811.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="32" x="5" y="84.9951">User</text><ellipse cx="24" cy="15" fill="#FEFECE" filter="url(#fsaulp7y2teo3)" rx="8" ry="8" style="stroke:#A80036;stroke-width:2.0;"/><path d="M24,23 L24,50 M11,31 L37,31 M24,50 L11,65 M24,50 L37,65 " fill="none" filter="url(#fsaulp7y2teo3)" style="stroke:#A80036;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="32" x="5" y="2823.5732">User</text><ellipse cx="24" cy="2836.875" fill="#FEFECE" filter="url(#fsaulp7y2teo3)" rx="8" ry="8" style="stroke:#A80036;stroke-width:2.0;"/><path d="M24,2844.875 L24,2871.875 M11,2852.875 L37,2852.875 M24,2871.875 L11,2886.875 M24,2871.875 L37,2886.875 " fill="none" filter="url(#fsaulp7y2teo3)" style="stroke:#A80036;stroke-width:2.0;"/><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="41" x="321.5" y="53"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="27" x="328.5" y="72.9951">App</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="41" x="321.5" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="27" x="328.5" y="2830.5732">App</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="61" x="636.5" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="47" x="643.5" y="2830.5732">Router</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="62" x="1152" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="48" x="1159" y="2830.5732">Trainer</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="64" x="1474" y="53"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="50" x="1481" y="72.9951">Factory</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="64" x="1474" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="50" x="1481" y="2830.5732">Factory</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="70" x="1685" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="56" x="1692" y="2830.5732">IImputer</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="90" x="1769" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="76" x="1776" y="2830.5732">INormalizer</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="78" x="1873" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="64" x="1880" y="2830.5732">IClassifier</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="75" x="1965" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="61" x="1972" y="2830.5732">MLModel</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="66" x="2152" y="84.9951">Database</text><path d="M2170,36 C2170,26 2188,26 2188,26 C2188,26 2206,26 2206,36 L2206,62 C2206,72 2188,72 2188,72 C2188,72 2170,72 2170,62 L2170,36 " fill="#FEFECE" filter="url(#fsaulp7y2teo3)" style="stroke:#000000;stroke-width:1.5;"/><path d="M2170,36 C2170,46 2188,46 2188,46 C2188,46 2206,46 2206,36 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="66" x="2152" y="2823.5732">Database</text><path d="M2170,2836.875 C2170,2826.875 2188,2826.875 2188,2826.875 C2188,2826.875 2206,2826.875 2206,2836.875 L2206,2862.875 C2206,2872.875 2188,2872.875 2188,2872.875 C2188,2872.875 2170,2872.875 2170,2862.875 L2170,2836.875 " fill="#FEFECE" filter="url(#fsaulp7y2teo3)" style="stroke:#000000;stroke-width:1.5;"/><path d="M2170,2836.875 C2170,2846.875 2188,2846.875 2188,2846.875 C2188,2846.875 2206,2846.875 2206,2836.875 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="113" x="2234" y="53"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="99" x="2241" y="72.9951">ExpressServer</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="113" x="2234" y="2810.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="99" x="2241" y="2830.5732">ExpressServer</text><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="100.2656" style="stroke:#A80036;stroke-width:1.0;" width="10" x="339" y="252.125"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="145.6641" style="stroke:#A80036;stroke-width:1.0;" width="10" x="339" y="381.5234"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="2237.2578" style="stroke:#A80036;stroke-width:1.0;" width="10" x="339" y="556.3203"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="35.2969" style="stroke:#A80036;stroke-width:1.0;" width="10" x="664" y="187.6953"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="57.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="664" y="281.2578"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="87.3984" style="stroke:#A80036;stroke-width:1.0;" width="10" x="664" y="410.6563"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="2194.125" style="stroke:#A80036;stroke-width:1.0;" width="10" x="664" y="585.4531"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="20.1641" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1180" y="639.7188"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="2076.5625" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1180" y="689.0156"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="40.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="1072.4141"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="274.2266" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="1285.2109"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="40.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="1756.2344"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="259.0938" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="1991.0313"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1185" y="2604.8828"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="103.5625" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1503" y="1319.3438"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="103.5625" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1503" y="2025.1641"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="103.5625" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1503" y="2370.7891"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="35.2969" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1717" y="1358.4766"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1717" y="1452.0391"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1717" y="1495.1719"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="35.2969" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1811" y="2064.2969"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1811" y="2157.8594"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1811" y="2200.9922"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="35.2969" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1909" y="2409.9219"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1909" y="2503.4844"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1909" y="2546.6172"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="20.1641" style="stroke:#A80036;stroke-width:1.0;" width="10" x="1999.5" y="2688.2813"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="119.4297"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="310.3906"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="439.7891"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="776.4141"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="917.0781"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="975.0156"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="1148.6797"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="1595.5703"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="1832.5"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="14" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2183" y="2737.5781"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2287.5" y="718.1484"/><rect fill="#FFFFFF" filter="url(#fsaulp7y2teo3)" height="29.1328" style="stroke:#A80036;stroke-width:1.0;" width="10" x="2287.5" y="858.8125"/><polygon fill="#A80036" points="2171,115.4297,2181,119.4297,2171,123.4297,2175,119.4297" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344" x2="2177" y1="119.4297" y2="119.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="201" x="351" y="114.3638">establishDatabaseConnection()</text><polygon fill="#A80036" points="355,144.5625,345,148.5625,355,152.5625,351,148.5625" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="349" x2="2187" y1="148.5625" y2="148.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="122" x="361" y="143.4966">db: DatabaseClient</text><polygon fill="#A80036" points="624.5,173.6953,634.5,177.6953,624.5,181.6953,628.5,177.6953" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344" x2="630.5" y1="177.6953" y2="177.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="351" y="172.6294">&lt;&lt;create&gt;&gt; Router(db)</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="61" x="636.5" y="156.5625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="47" x="643.5" y="176.5576">Router</text><polygon fill="#A80036" points="355,218.9922,345,222.9922,355,226.9922,351,222.9922" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="349" x2="668" y1="222.9922" y2="222.9922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="361" y="217.9263">router: Router</text><polygon fill="#A80036" points="327,248.125,337,252.125,327,256.125,331,252.125" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="24" x2="333" y1="252.125" y2="252.125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="296" x="31" y="247.0591">createModelWorkspace(workspaceId: ObjectId)</text><polygon fill="#A80036" points="652,277.2578,662,281.2578,652,285.2578,656,281.2578" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="349" x2="658" y1="281.2578" y2="281.2578"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="296" x="356" y="276.1919">createModelWorkspace(workspaceId: ObjectId)</text><polygon fill="#A80036" points="2171,306.3906,2181,310.3906,2171,314.3906,2175,310.3906" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="674" x2="2177" y1="310.3906" y2="310.3906"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="285" x="681" y="305.3247">workspaces.insert_one({"_id": workspaceId})</text><polygon fill="#A80036" points="685,320.3906,675,324.3906,685,328.3906,681,324.3906" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="679" x2="2187" y1="324.3906" y2="324.3906"/><polygon fill="#A80036" points="360,334.3906,350,338.3906,360,342.3906,356,338.3906" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="354" x2="668" y1="338.3906" y2="338.3906"/><polygon fill="#A80036" points="35,348.3906,25,352.3906,35,356.3906,31,352.3906" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="29" x2="343" y1="352.3906" y2="352.3906"/><polygon fill="#A80036" points="327,377.5234,337,381.5234,327,385.5234,331,381.5234" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="24" x2="333" y1="381.5234" y2="381.5234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="106" x="31" y="376.4575">getParameters()</text><polygon fill="#A80036" points="652,406.6563,662,410.6563,652,414.6563,656,410.6563" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="349" x2="658" y1="410.6563" y2="410.6563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="106" x="356" y="405.5903">getParameters()</text><polygon fill="#A80036" points="2171,435.7891,2181,439.7891,2171,443.7891,2175,439.7891" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="674" x2="2177" y1="439.7891" y2="439.7891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="681" y="434.7231">parameters.find()</text><polygon fill="#A80036" points="685,464.9219,675,468.9219,685,472.9219,681,468.9219" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="679" x2="2187" y1="468.9219" y2="468.9219"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="204" x="691" y="463.856">parameters: GetParametersRes</text><polygon fill="#A80036" points="360,494.0547,350,498.0547,360,502.0547,356,498.0547" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="354" x2="668" y1="498.0547" y2="498.0547"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="204" x="366" y="492.9888">parameters: GetParametersRes</text><polygon fill="#A80036" points="35,523.1875,25,527.1875,35,531.1875,31,527.1875" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="29" x2="343" y1="527.1875" y2="527.1875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="204" x="41" y="522.1216">parameters: GetParametersRes</text><polygon fill="#A80036" points="327,552.3203,337,556.3203,327,560.3203,331,556.3203" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="24" x2="333" y1="556.3203" y2="556.3203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="177" x="31" y="551.2544">train(workspaceId: ObjectId)</text><polygon fill="#A80036" points="652,581.4531,662,585.4531,652,589.4531,656,585.4531" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="349" x2="658" y1="585.4531" y2="585.4531"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="269" x="356" y="580.3872">train(workspaceId: ObjectId, req: TrainReq)</text><polygon fill="#A80036" points="1140,625.7188,1150,629.7188,1140,633.7188,1144,629.7188" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="674" x2="1146" y1="629.7188" y2="629.7188"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="450" x="681" y="609.52">&lt;&lt;create&gt;&gt; Trainer(workspaceId, model_name, imputation, features,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="248" x="681" y="624.6528">normalizer, classifier, hyperparameter)</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="62" x="1152" y="593.4531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="48" x="1159" y="613.4482">Trainer</text><polygon fill="#A80036" points="685,655.8828,675,659.8828,685,663.8828,681,659.8828" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="679" x2="1184" y1="659.8828" y2="659.8828"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="94" x="691" y="654.8169">trainer: Trainer</text><polygon fill="#A80036" points="1168,685.0156,1178,689.0156,1168,693.0156,1172,689.0156" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="674" x2="1174" y1="689.0156" y2="689.0156"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="39" x="681" y="683.9497">train()</text><polygon fill="#A80036" points="2275.5,714.1484,2285.5,718.1484,2275.5,722.1484,2279.5,718.1484" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2281.5" y1="718.1484" y2="718.1484"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="490" x="1197" y="713.0825">getSamples({"workspaceId": workspaceId, "onlyIDs": false, "onlyHash": true})</text><polygon fill="#A80036" points="1201,743.2813,1191,747.2813,1201,751.2813,1197,747.2813" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2291.5" y1="747.2813" y2="747.2813"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="172" x="1207" y="742.2153">currentSampleHash: string</text><polygon fill="#A80036" points="2171,772.4141,2181,776.4141,2171,780.4141,2175,776.4141" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2177" y1="776.4141" y2="776.4141"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="503" x="1197" y="771.3481">workspaces.find_one({"_id": workspaceId}, {"processedData.sampleHash": 1})</text><polygon fill="#A80036" points="1201,801.5469,1191,805.5469,1201,809.5469,1197,805.5469" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2187" y1="805.5469" y2="805.5469"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="180" x="1207" y="800.481">previousSampleHash: string</text><path d="M1142,820.5469 L1206,820.5469 L1206,827.5469 L1196,837.5469 L1142,837.5469 L1142,820.5469 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.0;"/><rect fill="none" height="191.6016" style="stroke:#000000;stroke-width:2.0;" width="1219" x="1142" y="820.5469"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="19" x="1157" y="833.6138">alt</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="291" x="1221" y="832.7573">[currentSampleHash != previousSampleHash]</text><polygon fill="#A80036" points="2275.5,854.8125,2285.5,858.8125,2275.5,862.8125,2279.5,858.8125" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2281.5" y1="858.8125" y2="858.8125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="494" x="1197" y="853.7466">getSamples({"workspaceId": workspaceId, "onlyIDs": false, "onlyHash": false})</text><polygon fill="#A80036" points="1201,883.9453,1191,887.9453,1201,891.9453,1197,887.9453" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2291.5" y1="887.9453" y2="887.9453"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="96" x="1207" y="882.8794">data: Sample[]</text><polygon fill="#A80036" points="2171,913.0781,2181,917.0781,2171,921.0781,2175,917.0781" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2177" y1="917.0781" y2="917.0781"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="974" x="1197" y="912.0122">workspaces.update_one({"workspaceId": workspaceID}, {"$set": {"processedData.$.sampleHash": currentSampleHash,"processedData.$.data": data}})</text><polygon fill="#A80036" points="1201,927.0781,1191,931.0781,1201,935.0781,1197,931.0781" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2187" y1="931.0781" y2="931.0781"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1142" x2="2361" y1="940.0781" y2="940.0781"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="295" x="1147" y="950.2886">[currentSampleHash == previousSampleHash]</text><polygon fill="#A80036" points="2171,971.0156,2181,975.0156,2171,979.0156,2175,975.0156" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2177" y1="975.0156" y2="975.0156"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="419" x="1197" y="969.9497">workspaces.find_one({"_id": workspaceId}, {"processedData": 1})</text><polygon fill="#A80036" points="1201,1000.1484,1191,1004.1484,1201,1008.1484,1197,1004.1484" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2187" y1="1004.1484" y2="1004.1484"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="205" x="1207" y="999.0825">processedData: WorkspaceData</text><path d="M1142,1026.1484 L1212,1026.1484 L1212,1033.1484 L1202,1043.1484 L1142,1043.1484 L1142,1026.1484 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.0;"/><rect fill="none" height="144.5313" style="stroke:#000000;stroke-width:2.0;" width="1092" x="1142" y="1026.1484"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="25" x="1157" y="1039.2153">opt</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="470" x="1227" y="1038.3589">[no data windows in processedData with given window size/sliding step]</text><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="1237" y1="1059.4141" y2="1059.4141"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1237" x2="1237" y1="1059.4141" y2="1072.4141"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1196" x2="1237" y1="1072.4141" y2="1072.4141"/><polygon fill="#A80036" points="1206,1068.4141,1196,1072.4141,1206,1076.4141,1202,1072.4141" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="134" x="1202" y="1054.3481">splitToWindows(data)</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="1237" y1="1111.5469" y2="1111.5469"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1237" x2="1237" y1="1111.5469" y2="1124.5469"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1190" x2="1237" y1="1124.5469" y2="1124.5469"/><polygon fill="#A80036" points="1200,1120.5469,1190,1124.5469,1200,1128.5469,1196,1124.5469" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="173" x="1202" y="1106.481">dataWindows: DataFrame[]</text><polygon fill="#A80036" points="2171,1144.6797,2181,1148.6797,2171,1152.6797,2175,1148.6797" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2177" y1="1148.6797" y2="1148.6797"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="372" x="1197" y="1143.6138">slidingWindows.insert_one(window_size, sliding_step, data)</text><polygon fill="#A80036" points="1201,1158.6797,1191,1162.6797,1201,1166.6797,1197,1162.6797" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2187" y1="1162.6797" y2="1162.6797"/><path d="M942,1182.6797 L942,1222.6797 L1424,1222.6797 L1424,1192.6797 L1414,1182.6797 L942,1182.6797 " fill="#FBFB77" filter="url(#fsaulp7y2teo3)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1414,1182.6797 L1414,1192.6797 L1424,1192.6797 L1414,1182.6797 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="288" x="948" y="1199.7466">if there were data windows in processedData:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="461" x="948" y="1214.8794">slidingWindow = processedData.slidingWindows[window size/sliding step]</text><path d="M1142,1238.9453 L1212,1238.9453 L1212,1245.9453 L1202,1255.9453 L1142,1255.9453 L1142,1238.9453 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.0;"/><rect fill="none" height="378.625" style="stroke:#000000;stroke-width:2.0;" width="1092" x="1142" y="1238.9453"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="25" x="1157" y="1252.0122">opt</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="315" x="1227" y="1251.1558">[data not imputed with the given imputer before]</text><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="1237" y1="1272.2109" y2="1272.2109"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1237" x2="1237" y1="1272.2109" y2="1285.2109"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1196" x2="1237" y1="1285.2109" y2="1285.2109"/><polygon fill="#A80036" points="1206,1281.2109,1196,1285.2109,1206,1289.2109,1202,1285.2109" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="175" x="1202" y="1267.145">impute(slidingWindow.data)</text><polygon fill="#A80036" points="1491,1315.3438,1501,1319.3438,1491,1323.3438,1495,1319.3438" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1195" x2="1497" y1="1319.3438" y2="1319.3438"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="150" x="1202" y="1314.2778">getImputer(imputation)</text><polygon fill="#A80036" points="1673,1344.4766,1683,1348.4766,1673,1352.4766,1677,1348.4766" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1513" x2="1679" y1="1348.4766" y2="1348.4766"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="148" x="1520" y="1343.4106">&lt;&lt;create&gt;&gt;IImputer()</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="70" x="1685" y="1327.3438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="56" x="1692" y="1347.3389">IImputer</text><polygon fill="#A80036" points="1524,1389.7734,1514,1393.7734,1524,1397.7734,1520,1393.7734" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1518" x2="1721" y1="1393.7734" y2="1393.7734"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="1530" y="1388.7075">imputer_object: IImputer</text><polygon fill="#A80036" points="1206,1418.9063,1196,1422.9063,1206,1426.9063,1202,1422.9063" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1200" x2="1507" y1="1422.9063" y2="1422.9063"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="1212" y="1417.8403">imputer_object: IImputer</text><polygon fill="#A80036" points="1705,1448.0391,1715,1452.0391,1705,1456.0391,1709,1452.0391" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1195" x2="1711" y1="1452.0391" y2="1452.0391"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="1202" y="1446.9731">fit(data)</text><polygon fill="#A80036" points="1206,1462.0391,1196,1466.0391,1206,1470.0391,1202,1466.0391" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1200" x2="1721" y1="1466.0391" y2="1466.0391"/><polygon fill="#A80036" points="1705,1491.1719,1715,1495.1719,1705,1499.1719,1709,1495.1719" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1195" x2="1711" y1="1495.1719" y2="1495.1719"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="1202" y="1490.106">transform(data)</text><polygon fill="#A80036" points="1206,1520.3047,1196,1524.3047,1206,1528.3047,1202,1524.3047" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1200" x2="1721" y1="1524.3047" y2="1524.3047"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="1212" y="1519.2388">data: DataFrame[]</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="1237" y1="1558.4375" y2="1558.4375"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1237" x2="1237" y1="1558.4375" y2="1571.4375"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1190" x2="1237" y1="1571.4375" y2="1571.4375"/><polygon fill="#A80036" points="1200,1567.4375,1190,1571.4375,1200,1575.4375,1196,1571.4375" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="294" x="1202" y="1553.3716">(data: DataFrame[], imputer_object: IImputer)</text><polygon fill="#A80036" points="2171,1591.5703,2181,1595.5703,2171,1599.5703,2175,1595.5703" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2177" y1="1595.5703" y2="1595.5703"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="382" x="1197" y="1590.5044">imputedDatas.insert_one(imputation, data, imputer_object)</text><polygon fill="#A80036" points="1201,1605.5703,1191,1609.5703,1201,1613.5703,1197,1609.5703" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2187" y1="1609.5703" y2="1609.5703"/><path d="M944,1629.5703 L944,1669.5703 L1421,1669.5703 L1421,1639.5703 L1411,1629.5703 L944,1629.5703 " fill="#FBFB77" filter="url(#fsaulp7y2teo3)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1411,1629.5703 L1411,1639.5703 L1421,1639.5703 L1411,1629.5703 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="271" x="950" y="1646.6372">if data was imputed with the given imputer</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="456" x="950" y="1661.77">imputedData = slidingWindow.imputedDatas[imputation]: ImputedData</text><path d="M908,1685.8359 L985,1685.8359 L985,1692.8359 L975,1702.8359 L908,1702.8359 L908,1685.8359 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.0;"/><rect fill="none" height="229.9297" style="stroke:#000000;stroke-width:2.0;" width="1336" x="908" y="1685.8359"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="32" x="923" y="1698.9028">loop</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="131" x="1000" y="1698.0464">[feature in features]</text><path d="M1142,1709.9688 L1212,1709.9688 L1212,1716.9688 L1202,1726.9688 L1142,1726.9688 L1142,1709.9688 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.0;"/><rect fill="none" height="144.5313" style="stroke:#000000;stroke-width:2.0;" width="1092" x="1142" y="1709.9688"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="25" x="1157" y="1723.0356">opt</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="193" x="1227" y="1722.1792">[feature not extracted before]</text><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="1237" y1="1743.2344" y2="1743.2344"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1237" x2="1237" y1="1743.2344" y2="1756.2344"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1196" x2="1237" y1="1756.2344" y2="1756.2344"/><polygon fill="#A80036" points="1206,1752.2344,1196,1756.2344,1206,1760.2344,1202,1756.2344" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="275" x="1202" y="1738.1685">extractFeature(imputedData.data, feature)</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="1237" y1="1795.3672" y2="1795.3672"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1237" x2="1237" y1="1795.3672" y2="1808.3672"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1190" x2="1237" y1="1808.3672" y2="1808.3672"/><polygon fill="#A80036" points="1200,1804.3672,1190,1808.3672,1200,1812.3672,1196,1808.3672" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="109" x="1202" y="1790.3013">data: DataFrame</text><polygon fill="#A80036" points="2171,1828.5,2181,1832.5,2171,1836.5,2175,1832.5" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2177" y1="1832.5" y2="1832.5"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="281" x="1197" y="1827.4341">extractedFeatures.insert_one(feature, data)</text><polygon fill="#A80036" points="1201,1842.5,1191,1846.5,1201,1850.5,1197,1846.5" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2187" y1="1846.5" y2="1846.5"/><path d="M918,1866.5 L918,1906.5 L1447,1906.5 L1447,1876.5 L1437,1866.5 L918,1866.5 " fill="#FBFB77" filter="url(#fsaulp7y2teo3)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1437,1866.5 L1437,1876.5 L1447,1876.5 L1437,1866.5 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="195" x="924" y="1883.5669">if feature was extracted before</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="508" x="924" y="1898.6997">extractedFeature = imputedData.extractedFeatures[feature]: ExtractedFeature</text><path d="M1113,1927.7656 L1113,1952.7656 L1253,1952.7656 L1253,1937.7656 L1243,1927.7656 L1113,1927.7656 " fill="#FBFB77" filter="url(#fsaulp7y2teo3)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1243,1927.7656 L1243,1937.7656 L1253,1937.7656 L1243,1927.7656 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="1119" y="1944.8325">data = all features</text><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="1237" y1="1978.0313" y2="1978.0313"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1237" x2="1237" y1="1978.0313" y2="1991.0313"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1196" x2="1237" y1="1991.0313" y2="1991.0313"/><polygon fill="#A80036" points="1206,1987.0313,1196,1991.0313,1206,1995.0313,1202,1991.0313" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="1202" y="1972.9653">normalize(data)</text><polygon fill="#A80036" points="1491,2021.1641,1501,2025.1641,1491,2029.1641,1495,2025.1641" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1195" x2="1497" y1="2025.1641" y2="2025.1641"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="169" x="1202" y="2020.0981">getNormalizer(normalizer)</text><polygon fill="#A80036" points="1757,2050.2969,1767,2054.2969,1757,2058.2969,1761,2054.2969" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1513" x2="1763" y1="2054.2969" y2="2054.2969"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="168" x="1520" y="2049.231">&lt;&lt;create&gt;&gt;INormalizer()</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="90" x="1769" y="2033.1641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="76" x="1776" y="2053.1592">INormalizer</text><polygon fill="#A80036" points="1524,2095.5938,1514,2099.5938,1524,2103.5938,1520,2099.5938" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1518" x2="1815" y1="2099.5938" y2="2099.5938"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="195" x="1530" y="2094.5278">normalizer_object: INormalizer</text><polygon fill="#A80036" points="1206,2124.7266,1196,2128.7266,1206,2132.7266,1202,2128.7266" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1200" x2="1507" y1="2128.7266" y2="2128.7266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="195" x="1212" y="2123.6606">normalizer_object: INormalizer</text><polygon fill="#A80036" points="1799,2153.8594,1809,2157.8594,1799,2161.8594,1803,2157.8594" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1195" x2="1805" y1="2157.8594" y2="2157.8594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="1202" y="2152.7935">fit(data)</text><polygon fill="#A80036" points="1206,2167.8594,1196,2171.8594,1206,2175.8594,1202,2171.8594" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1200" x2="1815" y1="2171.8594" y2="2171.8594"/><polygon fill="#A80036" points="1799,2196.9922,1809,2200.9922,1799,2204.9922,1803,2200.9922" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1195" x2="1805" y1="2200.9922" y2="2200.9922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="1202" y="2195.9263">transform(data)</text><polygon fill="#A80036" points="1206,2226.125,1196,2230.125,1206,2234.125,1202,2230.125" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1200" x2="1815" y1="2230.125" y2="2230.125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="109" x="1212" y="2225.0591">data: DataFrame</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="1237" y1="2249.125" y2="2249.125"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1237" x2="1237" y1="2249.125" y2="2262.125"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1190" x2="1237" y1="2262.125" y2="2262.125"/><polygon fill="#A80036" points="1200,2258.125,1190,2262.125,1200,2266.125,1196,2262.125" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1079,2270.125 L1079,2340.125 L1287,2340.125 L1287,2280.125 L1277,2270.125 L1079,2270.125 " fill="#FBFB77" filter="url(#fsaulp7y2teo3)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1277,2270.125 L1277,2280.125 L1287,2280.125 L1277,2270.125 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="1085" y="2287.1919">train_x: data to train</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="187" x="1085" y="2302.3247">train_y: labels of data to train</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="122" x="1085" y="2317.4575">test_x: data to test</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="179" x="1085" y="2332.5903">test_y: labels of data to test</text><polygon fill="#A80036" points="1491,2366.7891,1501,2370.7891,1491,2374.7891,1495,2370.7891" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="1497" y1="2370.7891" y2="2370.7891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="262" x="1197" y="2365.7231">getClassifier(classifier, hyperparameters)</text><polygon fill="#A80036" points="1861,2395.9219,1871,2399.9219,1861,2403.9219,1865,2399.9219" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1513" x2="1867" y1="2399.9219" y2="2399.9219"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="1520" y="2394.856">&lt;&lt;create&gt;&gt;IClassifier()</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="78" x="1873" y="2378.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="64" x="1880" y="2398.7842">IClassifier</text><polygon fill="#A80036" points="1524,2441.2188,1514,2445.2188,1524,2449.2188,1520,2445.2188" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1518" x2="1913" y1="2445.2188" y2="2445.2188"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="169" x="1530" y="2440.1528">classifier_object: IClassifier</text><polygon fill="#A80036" points="1201,2470.3516,1191,2474.3516,1201,2478.3516,1197,2474.3516" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="1507" y1="2474.3516" y2="2474.3516"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="169" x="1207" y="2469.2856">classifier_object: IClassifier</text><polygon fill="#A80036" points="1897,2499.4844,1907,2503.4844,1897,2507.4844,1901,2503.4844" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="1903" y1="2503.4844" y2="2503.4844"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="116" x="1197" y="2498.4185">fit(train_x, train_y)</text><polygon fill="#A80036" points="1201,2513.4844,1191,2517.4844,1201,2521.4844,1197,2517.4844" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="1913" y1="2517.4844" y2="2517.4844"/><polygon fill="#A80036" points="1897,2542.6172,1907,2546.6172,1897,2550.6172,1901,2546.6172" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="1903" y1="2546.6172" y2="2546.6172"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="1197" y="2541.5513">predict(test_x)</text><polygon fill="#A80036" points="1201,2571.75,1191,2575.75,1201,2579.75,1197,2575.75" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="1913" y1="2575.75" y2="2575.75"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="1207" y="2570.6841">prediction</text><polygon fill="#A80036" points="2359,2600.8828,2369,2604.8828,2359,2608.8828,2363,2604.8828" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1195" x2="2365" y1="2604.8828" y2="2604.8828"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="247" x="1202" y="2599.8169">classification_report(test_y, prediction)</text><polygon fill="#A80036" points="1201,2630.0156,1191,2634.0156,1201,2638.0156,1197,2634.0156" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2370" y1="2634.0156" y2="2634.0156"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="217" x="1207" y="2628.9497">performance_metrics: DataFrame</text><polygon fill="#A80036" points="1953,2674.2813,1963,2678.2813,1953,2682.2813,1957,2678.2813" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="1959" y1="2678.2813" y2="2678.2813"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="630" x="1197" y="2658.0825">&lt;&lt;create&gt;&gt;MLModel(model_name, imputation, features, normalizer, classifier, hyperparameters,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="477" x="1197" y="2673.2153">performance_metrics, imputer_object, normalizer_object, classifier_object)</text><rect fill="#FEFECE" filter="url(#fsaulp7y2teo3)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="75" x="1965" y="2642.0156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="61" x="1972" y="2662.0107">MLModel</text><polygon fill="#A80036" points="1201,2704.4453,1191,2708.4453,1201,2712.4453,1197,2708.4453" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2003.5" y1="2708.4453" y2="2708.4453"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="1207" y="2703.3794">model</text><polygon fill="#A80036" points="2171,2733.5781,2181,2737.5781,2171,2741.5781,2175,2737.5781" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="1190" x2="2177" y1="2737.5781" y2="2737.5781"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="163" x="1197" y="2732.5122">models.insertOne(model)</text><polygon fill="#A80036" points="1201,2747.5781,1191,2751.5781,1201,2755.5781,1197,2751.5781" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1195" x2="2187" y1="2751.5781" y2="2751.5781"/><polygon fill="#A80036" points="685,2761.5781,675,2765.5781,685,2769.5781,681,2765.5781" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="679" x2="1184" y1="2765.5781" y2="2765.5781"/><polygon fill="#A80036" points="360,2775.5781,350,2779.5781,360,2783.5781,356,2779.5781" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="354" x2="668" y1="2779.5781" y2="2779.5781"/><polygon fill="#A80036" points="35,2789.5781,25,2793.5781,35,2797.5781,31,2793.5781" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="29" x2="343" y1="2793.5781" y2="2793.5781"/><!--MD5=[4e5d8993f2a4d1fdb66dd6f105b52034]
@startuml Desktop Client - Training a model
autoactivate on

actor User
participant App
participant Router
participant Trainer
participant Factory
participant IImputer
participant INormalizer
participant IClassifier
participant MLModel
database Database
'participant Workspace
box "External Service"
participant ExpressServer
end box

App -> Database : establishDatabaseConnection()
return db: DatabaseClient

create Router
App -> Router: <<create>> Router(db)
return router: Router

User -> App: createModelWorkspace(workspaceId: ObjectId)
App -> Router: createModelWorkspace(workspaceId: ObjectId)
Router -> Database: workspaces.insert_one({"_id": workspaceId})
'create Workspace
'Database -> Workspace: <<create>> Workspace()
'return
return
return
return

User -> App: getParameters()
App -> Router: getParameters()
Router -> Database: parameters.find()
return parameters: GetParametersRes
return parameters: GetParametersRes
return parameters: GetParametersRes

User -> App: train(workspaceId: ObjectId)
App -> Router: train(workspaceId: ObjectId, req: TrainReq)
create Trainer
Router -> Trainer: <<create>> Trainer(workspaceId, model_name, imputation, features, \nnormalizer, classifier, hyperparameter)
return trainer: Trainer
Router -> Trainer: train()

Trainer -> ExpressServer: getSamples({"workspaceId": workspaceId, "onlyIDs": false, "onlyHash": true})
return currentSampleHash: string

Trainer -> Database: workspaces.find_one({"_id": workspaceId}, {"processedData.sampleHash": 1})
return previousSampleHash: string

alt currentSampleHash != previousSampleHash
    Trainer -> ExpressServer: getSamples({"workspaceId": workspaceId, "onlyIDs": false, "onlyHash": false})
    return data: Sample[]
    Trainer -> Database: workspaces.update_one({"workspaceId": workspaceID}, {"$set": {"processedData.$.sampleHash": currentSampleHash,"processedData.$.data": data}})
    return

else currentSampleHash == previousSampleHash
    Trainer -> Database: workspaces.find_one({"_id": workspaceId}, {"processedData": 1})
    return processedData: WorkspaceData
end

opt no data windows in processedData with given window size/sliding step
    Trainer -> Trainer: splitToWindows(data)
    return dataWindows: DataFrame[]
    Trainer -> Database: slidingWindows.insert_one(window_size, sliding_step, data)
    return
end 
note over Trainer
if there were data windows in processedData:
slidingWindow = processedData.slidingWindows[window size/sliding step]
end note

opt data not imputed with the given imputer before
    Trainer -> Trainer: impute(slidingWindow.data)
    Trainer -> Factory: getImputer(imputation)
    create IImputer
    Factory -> IImputer: <<create>>IImputer()
    return imputer_object: IImputer
    return imputer_object: IImputer
    Trainer -> IImputer: fit(data)
    return
    Trainer -> IImputer: transform(data)
    return data: DataFrame[]
    return (data: DataFrame[], imputer_object: IImputer)
    Trainer -> Database: imputedDatas.insert_one(imputation, data, imputer_object)
    return
end
note over Trainer
if data was imputed with the given imputer 
imputedData = slidingWindow.imputedDatas[imputation]: ImputedData
end note

loop feature in features
    opt feature not extracted before
        Trainer -> Trainer: extractFeature(imputedData.data, feature)
        return data: DataFrame
        Trainer -> Database: extractedFeatures.insert_one(feature, data)
        return  
    end
    note over Trainer
    if feature was extracted before
    extractedFeature = imputedData.extractedFeatures[feature]: ExtractedFeature
    end note
end
note over Trainer
data = all features
end note

Trainer -> Trainer: normalize(data)
Trainer -> Factory: getNormalizer(normalizer)
create INormalizer
Factory -> INormalizer: <<create>>INormalizer()
return normalizer_object: INormalizer
return normalizer_object: INormalizer
Trainer -> INormalizer: fit(data)
return 
Trainer -> INormalizer: transform(data)
return data: DataFrame
return

' complete note
note over Trainer
train_x: data to train
train_y: labels of data to train
test_x: data to test
test_y: labels of data to test
end note

Trainer -> Factory: getClassifier(classifier, hyperparameters)
create IClassifier
Factory -> IClassifier: <<create>>IClassifier()
return classifier_object: IClassifier
return classifier_object: IClassifier
Trainer -> IClassifier: fit(train_x, train_y)
return
Trainer -> IClassifier: predict(test_x)
return prediction

Trainer ->] : classification_report(test_y, prediction)
return performance_metrics: DataFrame

create MLModel
Trainer -> MLModel: <<create>>MLModel(model_name, imputation, features, normalizer, classifier, hyperparameters,\nperformance_metrics, imputer_object, normalizer_object, classifier_object)
return model
Trainer -> Database: models.insertOne(model)
return
return
return
return


@enduml

@startuml Desktop Client - Training a model
autoactivate on

actor User
participant App
participant Router
participant Trainer
participant Factory
participant IImputer
participant INormalizer
participant IClassifier
participant MLModel
database Database
box "External Service"
participant ExpressServer
end box

App -> Database : establishDatabaseConnection()
return db: DatabaseClient

create Router
App -> Router: <<create>> Router(db)
return router: Router

User -> App: createModelWorkspace(workspaceId: ObjectId)
App -> Router: createModelWorkspace(workspaceId: ObjectId)
Router -> Database: workspaces.insert_one({"_id": workspaceId})
return
return
return

User -> App: getParameters()
App -> Router: getParameters()
Router -> Database: parameters.find()
return parameters: GetParametersRes
return parameters: GetParametersRes
return parameters: GetParametersRes

User -> App: train(workspaceId: ObjectId)
App -> Router: train(workspaceId: ObjectId, req: TrainReq)
create Trainer
Router -> Trainer: <<create>> Trainer(workspaceId, model_name, imputation, features, \nnormalizer, classifier, hyperparameter)
return trainer: Trainer
Router -> Trainer: train()

Trainer -> ExpressServer: getSamples({"workspaceId": workspaceId, "onlyIDs": false, "onlyHash": true})
return currentSampleHash: string

Trainer -> Database: workspaces.find_one({"_id": workspaceId}, {"processedData.sampleHash": 1})
return previousSampleHash: string

alt currentSampleHash != previousSampleHash
    Trainer -> ExpressServer: getSamples({"workspaceId": workspaceId, "onlyIDs": false, "onlyHash": false})
    return data: Sample[]
    Trainer -> Database: workspaces.update_one({"workspaceId": workspaceID}, {"$set": {"processedData.$.sampleHash": currentSampleHash,"processedData.$.data": data}})
    return

else currentSampleHash == previousSampleHash
    Trainer -> Database: workspaces.find_one({"_id": workspaceId}, {"processedData": 1})
    return processedData: WorkspaceData
end

opt no data windows in processedData with given window size/sliding step
    Trainer -> Trainer: splitToWindows(data)
    return dataWindows: DataFrame[]
    Trainer -> Database: slidingWindows.insert_one(window_size, sliding_step, data)
    return
end 
note over Trainer
if there were data windows in processedData:
slidingWindow = processedData.slidingWindows[window size/sliding step]
end note

opt data not imputed with the given imputer before
    Trainer -> Trainer: impute(slidingWindow.data)
    Trainer -> Factory: getImputer(imputation)
    create IImputer
    Factory -> IImputer: <<create>>IImputer()
    return imputer_object: IImputer
    return imputer_object: IImputer
    Trainer -> IImputer: fit(data)
    return
    Trainer -> IImputer: transform(data)
    return data: DataFrame[]
    return (data: DataFrame[], imputer_object: IImputer)
    Trainer -> Database: imputedDatas.insert_one(imputation, data, imputer_object)
    return
end
note over Trainer
if data was imputed with the given imputer 
imputedData = slidingWindow.imputedDatas[imputation]: ImputedData
end note

loop feature in features
    opt feature not extracted before
        Trainer -> Trainer: extractFeature(imputedData.data, feature)
        return data: DataFrame
        Trainer -> Database: extractedFeatures.insert_one(feature, data)
        return  
    end
    note over Trainer
    if feature was extracted before
    extractedFeature = imputedData.extractedFeatures[feature]: ExtractedFeature
    end note
end
note over Trainer
data = all features
end note

Trainer -> Trainer: normalize(data)
Trainer -> Factory: getNormalizer(normalizer)
create INormalizer
Factory -> INormalizer: <<create>>INormalizer()
return normalizer_object: INormalizer
return normalizer_object: INormalizer
Trainer -> INormalizer: fit(data)
return 
Trainer -> INormalizer: transform(data)
return data: DataFrame
return

note over Trainer
train_x: data to train
train_y: labels of data to train
test_x: data to test
test_y: labels of data to test
end note

Trainer -> Factory: getClassifier(classifier, hyperparameters)
create IClassifier
Factory -> IClassifier: <<create>>IClassifier()
return classifier_object: IClassifier
return classifier_object: IClassifier
Trainer -> IClassifier: fit(train_x, train_y)
return
Trainer -> IClassifier: predict(test_x)
return prediction

Trainer ->] : classification_report(test_y, prediction)
return performance_metrics: DataFrame

create MLModel
Trainer -> MLModel: <<create>>MLModel(model_name, imputation, features, normalizer, classifier, hyperparameters,\nperformance_metrics, imputer_object, normalizer_object, classifier_object)
return model
Trainer -> Database: models.insertOne(model)
return
return
return
return


@enduml

PlantUML version 1.2020.22(Sun Dec 06 12:36:27 EET 2020)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>