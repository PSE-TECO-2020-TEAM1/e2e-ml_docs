@startuml Authentication Class Diagram

class App {
    -SERVER_SECRET: string
}

class TokenContent {
    +username: string
    +expiration: number
}

class AuthenticationController {
    +signUp(req: SignUpReq, res: Object) : void
    +login(req: LoginReq, res: Object) : void
    -signToken(content: TokenContent, secret: string) : string
    +refresh(req: RefreshReq, res: Object) : void
    -extractToken(token: string, secret: string) : TokenContent
}

AuthenticationController --> TokenContent

interface SignUpReq {
    -seeApiDocumentation
}
interface SignUpRes {
    -seeApiDocumentation
}
SignUpReq -[hidden]-> SignUpRes

interface LoginReq {
    -seeApiDocumentation
}
interface LoginRes {
    -seeApiDocumentation
}
LoginReq -[hidden]-> LoginRes

interface RefreshReq {
    -seeApiDocumentation
}
interface RefreshRes {
    -seeApiDocumentation
}
RefreshReq -[hidden]-> RefreshRes

AuthenticationController ..> SignUpReq
AuthenticationController ..> SignUpRes
AuthenticationController ..> LoginReq
AuthenticationController ..> LoginRes
AuthenticationController ..> RefreshReq
AuthenticationController ..> RefreshRes

App --> AuthenticationController

class UserModel {
    +findOne(username: string) : User
}

AuthenticationController --> UserModel

class User {
    +username: string
    +passwordHash: string
    +authToken: string
    +refreshToken: string
    +isValidPassword() : boolean
}

UserModel *-- User : users

@enduml